package com.library.producer;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.library.domain.LibraryEvent;

@Component
public class LibraryEventsProducer {
	
	@Value("${spring.kafka.topic}")
	public String topic;
	
	private final KafkaTemplate<Integer, String> kafkaTemplate;
	
	private final ObjectMapper objectMapper;
	
	public LibraryEventsProducer(KafkaTemplate<Integer, String> kafkaTemplate,
			ObjectMapper objectMapper) {
		this.kafkaTemplate = kafkaTemplate;
		this.objectMapper = objectMapper;
	}
	
	public void sendLibraryEvent(LibraryEvent libraryEvent) throws JsonProcessingException {
		
		Integer key = libraryEvent.libraryEventId();
		String value = objectMapper.writeValueAsString(libraryEvent);
		kafkaTemplate.send(topic, key, value);
		
	}
	
}
